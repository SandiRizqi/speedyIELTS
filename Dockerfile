# Install dependencies
FROM node:18-alpine AS builder



ARG NEXT_PUBLIC_EXAMINER_URL
ARG NEXT_PUBLIC_MITRANS_CLIENT_KEY
ARG NEXT_PUBLIC_MITRANS_API_URL
ARG NEXT_PUBLIC_FIREBASE_APIKEY
ARG NEXT_PUBLIC_FIREBASE_AUTHDOMAIN
ARG NEXT_PUBLIC_FIREBASE_DATABASEURL
ARG NEXT_PUBLIC_FIREBASE_PROJECTID
ARG NEXT_PUBLIC_FIREBASE_STORAGEBUCKET
ARG NEXT_PUBLIC_FIREBASE_MESSAGINGSENDERID
ARG NEXT_PUBLIC_FIREBASE_APPID
ARG NEXT_PUBLIC_FIREBASE_MEASUREMENTID
ARG NEXT_PUBLIC_APP_VERSION
ARG NEXT_PUBLIC_PAYMENT_FUNCTION
ARG NEXT_PUBLIC_SITE_KEY






WORKDIR /app
COPY . .

# Inject environment variables into .env.local
RUN echo "NEXT_PUBLIC_EXAMINER_URL=${NEXT_PUBLIC_EXAMINER_URL}" >> .env.production && \
    echo "NEXT_PUBLIC_MITRANS_CLIENT_KEY=${NEXT_PUBLIC_MITRANS_CLIENT_KEY}" >> .env.production && \
    echo "NEXT_PUBLIC_MITRANS_API_URL=${NEXT_PUBLIC_MITRANS_API_URL}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_APIKEY=${NEXT_PUBLIC_FIREBASE_APIKEY}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_AUTHDOMAIN=${NEXT_PUBLIC_FIREBASE_AUTHDOMAIN}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_DATABASEURL=${NEXT_PUBLIC_FIREBASE_DATABASEURL}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_PROJECTID=${NEXT_PUBLIC_FIREBASE_PROJECTID}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_STORAGEBUCKET=${NEXT_PUBLIC_FIREBASE_STORAGEBUCKET}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_MESSAGINGSENDERID=${NEXT_PUBLIC_FIREBASE_MESSAGINGSENDERID}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_APPID=${NEXT_PUBLIC_FIREBASE_APPID}" >> .env.production && \
    echo "NEXT_PUBLIC_FIREBASE_MEASUREMENTID=${NEXT_PUBLIC_FIREBASE_MEASUREMENTID}" >> .env.production && \
    echo "NEXT_PUBLIC_PAYMENT_FUNCTION=${NEXT_PUBLIC_PAYMENT_FUNCTION}" >> .env.production && \
    echo "NEXT_PUBLIC_SITE_KEY=${NEXT_PUBLIC_SITE_KEY}" >> .env.production && \
    echo "NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION}" >> .env.production

    
RUN npm install
RUN npm run build

# Production image
FROM node:18-alpine

WORKDIR /app
COPY --from=builder /app ./
EXPOSE 3000
ENV PORT 3000
CMD ["npm", "start"]